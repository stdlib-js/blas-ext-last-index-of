"use strict";var y=function(e,a){return function(){return a||e((a={exports:{}}).exports,a),a.exports}};var b=y(function(cr,_){"use strict";var B=require("@stdlib/ndarray-base-to-unique-normalized-indices"),U=require("@stdlib/array-base-indices-complement"),Y=require("@stdlib/array-base-take-indexed");function z(e,a){var r=B(a,e.length-1);return r===null?[]:Y(e,U(e.length,r))}_.exports=z});var T=y(function(br,E){"use strict";var q=require("@stdlib/ndarray-dtypes"),G=require("@stdlib/blas-ext-base-ndarray-glast-index-of"),H=require("@stdlib/blas-ext-base-ndarray-dlast-index-of"),J=require("@stdlib/blas-ext-base-ndarray-slast-index-of"),K=require("@stdlib/ndarray-base-unary-reduce-strided1d-dispatch-factory"),M=q("all"),N=q("all"),Q=q("integer_index_and_generic"),W=q("integer_index_and_generic"),X={output:"integer_index_and_generic",casting:"none"},Z={types:["float64","float32"],fcns:[H,J],default:G},$=K(Z,[M,N,Q],W,X);E.exports=$});var F=y(function(Tr,k){"use strict";var O=require("@stdlib/assert-has-own-property"),I=require("@stdlib/assert-is-plain-object"),V=require("@stdlib/assert-is-integer").isPrimitive,h=require("@stdlib/assert-is-ndarray-like"),P=require("@stdlib/ndarray-base-broadcast-scalar"),S=require("@stdlib/ndarray-base-maybe-broadcast-array"),x=require("@stdlib/ndarray-dtype"),rr=require("@stdlib/ndarray-shape"),er=require("@stdlib/ndarray-order"),w=require("@stdlib/string-format"),ar=require("@stdlib/ndarray-defaults"),ir=b(),tr=T(),nr=ar.get("dtypes.integer_index");function sr(e,a,r){var g,i,u,d,t,n,o,f,v,s;if(u=arguments.length,!h(e))throw new TypeError(w("invalid argument. First argument must be an ndarray. Value: `%s`.",e));if(u<2)throw new TypeError(w("invalid argument. Second argument must be either an ndarray or a scalar value. Value: `%s`.",a));if(f=x(e),o=er(e),d={dims:[-1],keepdims:!1},t=-1,n=!0,g=!1,u===3)V(r)?t=r:h(r)?(t=r,n=!1):(i=r,g=!0);else if(u>3){if(V(r))t=r;else if(h(r))t=r,n=!1;else throw new TypeError(w("invalid argument. Third argument must be either an ndarray or an integer. Value: `%s`.",r));i=arguments[3],g=!0}if(g){if(!I(i))throw new TypeError(w("invalid argument. Options argument must be an object. Value: `%s`.",i));O(i,"dim")&&(d.dims[0]=i.dim),O(i,"keepdims")&&(d.keepdims=i.keepdims),O(i,"dtype")&&(d.dtype=i.dtype)}if(v=rr(e),v.length<1)throw new RangeError("invalid argument. First argument must have at least one dimension.");return v=ir(v,d.dims),h(a)?s=S(a,v):s=P(a,f,v,o),n?t=P(t,nr,v,o):t=S(t,v),tr(e,s,t,d)}k.exports=sr});var L=y(function(Or,C){"use strict";var ur=require("@stdlib/assert-has-own-property"),vr=require("@stdlib/assert-is-plain-object"),D=require("@stdlib/assert-is-integer").isPrimitive,p=require("@stdlib/assert-is-ndarray-like"),j=require("@stdlib/ndarray-base-broadcast-scalar"),A=require("@stdlib/ndarray-base-maybe-broadcast-array"),lr=require("@stdlib/ndarray-dtype"),dr=require("@stdlib/ndarray-shape"),gr=require("@stdlib/ndarray-order"),m=require("@stdlib/string-format"),or=require("@stdlib/ndarray-defaults"),pr=b(),mr=T().assign,fr=or.get("dtypes.integer_index");function yr(e,a,r,g){var i,u,d,t,n,o,f,v,s,c,l;if(d=arguments.length,!p(e))throw new TypeError(m("invalid argument. First argument must be an ndarray. Value: `%s`.",e));if(v=lr(e),f=gr(e),t={dims:[-1]},n=-1,o=!0,i=!1,d<=3){if(l=r,!p(l))throw new TypeError(m("invalid argument. Third argument must be an ndarray. Value: `%s`.",l))}else if(d===4)if(p(g))if(l=g,D(r))n=r;else if(p(r))n=r,o=!1;else throw new TypeError(m("invalid argument. Third argument must be either an ndarray or an integer. Value: `%s`.",r));else{if(l=r,!p(l))throw new TypeError(m("invalid argument. Third argument must be an ndarray. Value: `%s`.",l));u=g,i=!0}else{if(D(r))n=r;else if(p(r))n=r,o=!1;else throw new TypeError(m("invalid argument. Third argument must be either an ndarray or an integer. Value: `%s`.",r));if(l=g,!p(l))throw new TypeError(m("invalid argument. Fourth argument must be an ndarray. Value: `%s`.",l));u=arguments[4],i=!0}if(i){if(!vr(u))throw new TypeError(m("invalid argument. Options argument must be an object. Value: `%s`.",u));ur(u,"dim")&&(t.dims[0]=u.dim)}if(s=dr(e),s.length<1)throw new RangeError("invalid argument. First argument must have at least one dimension.");return s=pr(s,t.dims),p(a)?c=A(a,s):c=j(a,v,s,f),o?n=j(n,fr,s,f):n=A(n,s),mr(e,c,n,l,t)}C.exports=yr});var qr=require("@stdlib/utils-define-nonenumerable-read-only-property"),R=F(),hr=L();qr(R,"assign",hr);module.exports=R;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
